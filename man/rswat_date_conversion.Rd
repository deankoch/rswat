% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rswat_utils.R
\name{rswat_date_conversion}
\alias{rswat_date_conversion}
\title{Convert between two representations of date}
\usage{
rswat_date_conversion(d, NA_zeros = TRUE, trim = TRUE)
}
\arguments{
\item{d}{either a Date vector or data frame with fields 'year', 'jday', and optionally 'month'}

\item{NA_zeros}{logical, whether to treat zeros as shorthand for first and last days of the year}

\item{trim}{logical, whether to return omit redundant columns}
}
\value{
either a Date vector or matrix with columns, whichever \code{d} is not
}
\description{
If \code{d} is a Date vector, the function returns a data frame with the same number of rows,
but with columns Julian date ('jday' ) and year ('year'). Otherwise the function assumes \code{d}
is a data frame (or matrix, or list) containing a 'year' column and a 'jday' or 'month'
column (or both). It appends a new column 'date' (or overwrites the existing one) with
these values converted to R Dates.
}
\details{
The 'year', 'jday', and 'month' columns can also be named any of the aliases listed in
\code{.rswat_gv_date_aliases()}. When 'month' but not 'jday' is specified, the function
sets the date to the first of the month. When only 'year' is specified, the function
assigns Jan 1 of that year.
}
\examples{
# convert from integers to Dates
n_test = 10
date_as_int = lapply(seq(n_test), \(x) c(jday=sample.int(365, 1), year=1950 + sample.int(100, 1)))
date_result = rswat_date_conversion(date_as_int)
str(date_result)

# and back again
int_result = rswat_date_conversion(date_result)
all.equal(date_as_int, int_result)

# input can be data frame
date_as_df = data.frame(do.call(rbind, date_as_int))
all.equal(date_result, rswat_date_conversion(date_as_df))

}
