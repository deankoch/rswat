% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rswat_db.R
\docType{class}
\name{rswat_db}
\alias{rswat_db}
\title{A reference class for SWAT+ projects}
\description{
An "rswat_db" object is a reference class (R5) object that collects information
and methods for a SWAT+ project, based on the configuration files found in the SWAT+
project directory \code{swat_dir}. Get a new instance of an "rswat_db" object by calling the
\code{new()} method with \code{rs = rswat_db$new()}
}
\details{
Project files (discovered in \code{swat_dir}) are listed in the \code{cio_df} field, a data frame
with one row per file and various attributes to describe and categorize the files. Only
files listed in this data frame can be loaded.

When a file \code{f} is loaded, it is parsed as a list of data frames which are copied to
\code{df_stor[[f]]}. Every table loaded in this way is also copied to a large data frame
\code{line_df}, which has a row for each white-space delimited field (including headers),
from all loaded files. A third copy of the data is stored in \code{txt[[f]]}, which caches
the line-by-line text of the file as a vector of character strings.
}
\section{Fields}{

\describe{
\item{\code{swat_dir}}{character, path to the SWAT+ project directory (should contain "file.cio")}

\item{\code{exe_path}}{character, path to the SWAT simulation executable (path should end in ".exe")}

\item{\code{cio_df}}{data frame, (internal use) information about files in the directory}

\item{\code{line_df}}{data frame, (internal use) information about all file contents}

\item{\code{line_df_temp}}{data frame, (internal use) information about specific file contents}

\item{\code{txt}}{list of character vectors, (internal use) file contents as plain text}

\item{\code{df_stor}}{nested list of data frames, (internal use) file contents as tables}
}}


\section{methods}{

The typical use case is to assign the project directory (\code{swat_dir}), scan for files
and open "file.cio" (to make \code{cio_df}), then open a some/all of the rest of the
configuration files (to make \code{line_df}). For example,
\itemize{
\item set field \code{swat_dir} either on initialization or via method \code{set_swar_dir}
\item get file info by calling \code{open_config_file('file.cio')} (populates field \code{cio_df})
\item load files listed in \code{f_list} by calling \code{open_config_batch(f_list)} (populates field \code{line_df})
\item open one of these files \code{f} by calling \code{get_df(f)} (returns list of data frames)
}
}

\section{.rswat_db}{

When the \code{rswat} package is loaded, an rswat_db class object called \code{.rswat_db} is defined
to store all data related to the currently loaded project. Non-developers should avoid
interacting directly with \code{.rswat_db} (ie don't call its methods or set its fields) and
instead use the provided helper functions.
}

\section{Reference class R5}{

R5 objects behave like traditional OOP classes you would find in C++ or Python, and
this is quite different from the value semantics used with other R objects.

For example, R5 methods come bundled with the object itself (encapsulation), and they
are accessed using the \code{$} operator, the same way that we access list entries.

R5 objects also have reference semantics, meaning that if you "copy" \code{rs} by assignment
with \code{x = rs}, then modify \code{x}, you are actually modifying \code{rs}. This is helpful for
speeding up loading and parsing times (less data copied as function arguments), and it
makes it easier to maintain a database about SWAT+ parameters that is visible to
all \code{rswat} functions.
}

